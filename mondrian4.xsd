<?xml version="1.0" encoding="UTF-8"?>
<!--
  This dtd file was automatically generated from XOM model mondrian.
  Do not edit this file by hand.
-->
<!--
  XML model for Mondrian schemas. It is generated from
  MondrianSchema.xml.
  See also {@link Mondrian3Def} (generated from
  Mondrian3Schema.xml), which is the XML model for Mondrian
  version 3.x schemas.
-->
<!-- Child element of a Cube. -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
  <xs:group name="CubeElement">
    <xs:choice>
      <xs:element ref="Dimensions"/>
      <xs:element ref="CalculatedMembers"/>
      <xs:element ref="NamedSets"/>
      <xs:element ref="Annotations"/>
      <xs:element ref="MeasureGroups"/>
    </xs:choice>
  </xs:group>
  <!-- Child element of a Level. -->
  <xs:group name="LevelElement">
    <xs:choice>
      <xs:element ref="Closure"/>
      <xs:element ref="Annotations"/>
    </xs:choice>
  </xs:group>
  <!-- Child element of a Measure. -->
  <xs:group name="MeasureElement">
    <xs:choice>
      <xs:element ref="CalculatedMemberProperty"/>
      <xs:element ref="Arguments"/>
      <xs:element ref="Annotations"/>
      <xs:element ref="CellFormatter"/>
    </xs:choice>
  </xs:group>
  <!-- Child element of a CalculatedMember. -->
  <xs:group name="CalculatedMemberElement">
    <xs:choice>
      <xs:element ref="CalculatedMemberProperty"/>
      <xs:element ref="Formula"/>
      <xs:element ref="Annotations"/>
      <xs:element ref="CellFormatter"/>
    </xs:choice>
  </xs:group>
  <!-- Child element of a NamedSet. -->
  <!-- Child element of a Dimension. -->
  <xs:group name="DimensionElement">
    <xs:choice>
      <xs:element ref="Hierarchies"/>
      <xs:element ref="Attributes"/>
      <xs:element ref="Annotations"/>
    </xs:choice>
  </xs:group>
  <!-- Child element of a Property. -->
  <xs:group name="PropertyElement">
    <xs:choice>
      <xs:element ref="Annotations"/>
      <xs:element ref="PropertyFormatter"/>
    </xs:choice>
  </xs:group>
  <!-- Child element of a Schema. -->
  <xs:group name="SchemaElement">
    <xs:choice>
      <xs:element ref="Dimension"/>
      <xs:element ref="Cube"/>
      <xs:element ref="NamedSet"/>
      <xs:element ref="Role"/>
      <xs:element ref="UserDefinedFunction"/>
      <xs:element ref="Parameter"/>
      <xs:element ref="Annotations"/>
      <xs:element ref="Localization"/>
      <xs:element ref="PhysicalSchema"/>
    </xs:choice>
  </xs:group>
  <!-- Child element of a MeasureGroup. -->
  <xs:element name="MeasureGroupElement" abstract="true"/>
  <!-- Child element of a Table. -->
  <xs:group name="TableElement">
    <xs:choice>
      <xs:element ref="Hints"/>
      <xs:element ref="ColumnDefs"/>
      <xs:element ref="Key"/>
    </xs:choice>
  </xs:group>
  <!-- Child element of an InlineTable. -->
  <xs:group name="InlineTableElement">
    <xs:choice>
      <xs:element ref="ColumnDefs"/>
      <xs:element ref="Rows"/>
      <xs:element ref="Key"/>
    </xs:choice>
  </xs:group>
  <!-- Child element of a Role. -->
  <xs:group name="RoleElement">
    <xs:choice>
      <xs:element ref="SchemaGrant"/>
      <xs:element ref="Union"/>
      <xs:element ref="Annotations"/>
      <xs:element ref="Script"/>
    </xs:choice>
  </xs:group>
  <!-- Element that contains children. -->
  <!-- Child element of an Attribute. -->
  <xs:group name="AttributeElement">
    <xs:choice>
      <xs:element ref="Property"/>
      <xs:element ref="Key"/>
      <xs:element ref="Name"/>
      <xs:element ref="OrderBy"/>
      <xs:element ref="Caption"/>
      <xs:element ref="Annotations"/>
      <xs:element ref="MemberFormatter"/>
    </xs:choice>
  </xs:group>
  <!-- Child element of a Hierarchy. -->
  <xs:group name="HierarchyElement">
    <xs:choice>
      <xs:element ref="Level"/>
      <xs:element ref="Annotations"/>
    </xs:choice>
  </xs:group>
  <!--
    An element that can occur in a PhysicalSchema. A relation (such as
    a Table or View) or a Link.
  -->
  <xs:element name="PhysicalSchemaElement" abstract="true"/>
  <!-- A relation (table, inline table, or view) in a PhysicalSchema. -->
  <!-- Child element of a Query. -->
  <xs:group name="QueryElement">
    <xs:choice>
      <xs:element ref="Key"/>
      <xs:element ref="ExpressionView"/>
      <xs:element ref="Annotations"/>
    </xs:choice>
  </xs:group>
  <xs:element name="Expression" abstract="true"/>
  <xs:complexType name="Expression">
    <xs:sequence>
      <xs:element ref="Expression"/>
    </xs:sequence>
  </xs:complexType>
  <!-- An element that can occur in a Localization. -->
  <xs:element name="LocalizationElement" abstract="true"/>
  <!--
    A schema is a collection of cubes.
    It can also contain shared dimensions (for use by those
    cubes), named sets, roles, and declarations of
    user-defined functions.
  -->
  <xs:element name="Schema">
    <xs:complexType>
      <xs:group minOccurs="0" maxOccurs="unbounded" ref="SchemaElement"/>
      <xs:attribute name="name" use="required"/>
      <xs:attribute name="caption"/>
      <xs:attribute name="description"/>
      <xs:attribute name="measuresCaption"/>
      <xs:attribute name="defaultRole"/>
      <xs:attribute name="quoteSql" default="true">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="true"/>
            <xs:enumeration value="false"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="missingLink" default="warning">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="ignore"/>
            <xs:enumeration value="warning"/>
            <xs:enumeration value="error"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="metamodelVersion"/>
      <xs:attribute name="locales"/>
    </xs:complexType>
  </xs:element>
  <!--
    A Dimension is a collection of attributes, some them
    organized into hierarchies.
    Dimensions are either defined at the Schema level, or as part of
    a Cube within a Dimensions element.
  -->
  <xs:element name="Dimension">
    <xs:complexType>
      <xs:group minOccurs="0" maxOccurs="unbounded" ref="DimensionElement"/>
      <xs:attribute name="name"/>
      <xs:attribute name="source"/>
      <xs:attribute name="visible" default="true">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="true"/>
            <xs:enumeration value="false"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="caption"/>
      <xs:attribute name="description"/>
      <xs:attribute name="type" default="OTHER">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="ACCOUNTS"/>
            <xs:enumeration value="BILL_OF_MATERIALS"/>
            <xs:enumeration value="CHANNEL"/>
            <xs:enumeration value="CURRENCY"/>
            <xs:enumeration value="CUSTOMERS"/>
            <xs:enumeration value="GEOGRAPHY"/>
            <xs:enumeration value="MEASURE"/>
            <xs:enumeration value="ORGANIZATION"/>
            <xs:enumeration value="OTHER"/>
            <xs:enumeration value="PRODUCTS"/>
            <xs:enumeration value="PROMOTION"/>
            <xs:enumeration value="QUANTITATIVE"/>
            <xs:enumeration value="RATES"/>
            <xs:enumeration value="SCENARIO"/>
            <xs:enumeration value="TIME"/>
            <xs:enumeration value="UNKNOWN"/>
            <xs:enumeration value="UTILITY"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="table"/>
      <xs:attribute name="key"/>
      <xs:attribute name="hanger" default="false">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="true"/>
            <xs:enumeration value="false"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <!--
    Array of Dimensions.
    Note that shared dimensions are direct children of a Schema element.
    The dimensions of a cube reside in a Dimensions holder element.
  -->
  <xs:element name="Dimensions">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="Dimension"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!-- Definition of a cube. -->
  <xs:element name="Cube">
    <xs:complexType>
      <xs:group minOccurs="0" maxOccurs="unbounded" ref="CubeElement"/>
      <xs:attribute name="name" use="required"/>
      <xs:attribute name="visible" default="true">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="true"/>
            <xs:enumeration value="false"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="caption"/>
      <xs:attribute name="description"/>
      <xs:attribute name="defaultMeasure"/>
      <xs:attribute name="cache" default="true">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="true"/>
            <xs:enumeration value="false"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="enabled" default="true">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="true"/>
            <xs:enumeration value="false"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="enableScenarios" default="false">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="true"/>
            <xs:enumeration value="false"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <!-- A list of Hierarchy elements. -->
  <xs:element name="Hierarchies">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="Hierarchy"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!-- A list of Attribute elements. -->
  <xs:element name="Attributes">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="Attribute"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--
    An attribute is a data value.
    If you are familiar with modeling relational database schemas,
    then an attribute is the nearest equivalent in the Mondrian
    schema to a column.
    Every attribute belongs to a dimension. (So, continuing the
    analogy, a dimension is the nearest equivalent of a table.)
    By setting hasHierarchy
    to true, you can automatically create a Hierarchy that has
    a single Level based on this attribute, called an attribute
    hierarchy. An attribute can also be used to build multi-level
    hierarchies, by including it in a Level.
  -->
  <xs:element name="Attribute">
    <xs:complexType>
      <xs:group minOccurs="0" maxOccurs="unbounded" ref="AttributeElement"/>
      <xs:attribute name="name" use="required"/>
      <xs:attribute name="caption"/>
      <xs:attribute name="description"/>
      <xs:attribute name="visible" default="true">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="true"/>
            <xs:enumeration value="false"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="levelType" default="Regular">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="Regular"/>
            <xs:enumeration value="TimeYears"/>
            <xs:enumeration value="TimeHalfYear"/>
            <xs:enumeration value="TimeQuarters"/>
            <xs:enumeration value="TimeMonths"/>
            <xs:enumeration value="TimeWeeks"/>
            <xs:enumeration value="TimeDays"/>
            <xs:enumeration value="TimeHours"/>
            <xs:enumeration value="TimeMinutes"/>
            <xs:enumeration value="TimeSeconds"/>
            <xs:enumeration value="TimeUndefined"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="approxRowCount"/>
      <xs:attribute name="table"/>
      <xs:attribute name="keyColumn"/>
      <xs:attribute name="nameColumn"/>
      <xs:attribute name="orderByColumn"/>
      <xs:attribute name="captionColumn"/>
      <xs:attribute name="datatype" default="String">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="String"/>
            <xs:enumeration value="Numeric"/>
            <xs:enumeration value="Integer"/>
            <xs:enumeration value="Boolean"/>
            <xs:enumeration value="Date"/>
            <xs:enumeration value="Time"/>
            <xs:enumeration value="Timestamp"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="hasHierarchy" default="true">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="true"/>
            <xs:enumeration value="false"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="hierarchyHasAll" default="true">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="true"/>
            <xs:enumeration value="false"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="hierarchyCaption"/>
      <xs:attribute name="hierarchyAllMemberName"/>
      <xs:attribute name="hierarchyAllMemberCaption"/>
      <xs:attribute name="hierarchyAllLevelName"/>
      <xs:attribute name="hierarchyDefaultMember"/>
    </xs:complexType>
  </xs:element>
  <!-- Collection of attributes organized into levels. -->
  <xs:element name="Hierarchy">
    <xs:complexType>
      <xs:group minOccurs="0" maxOccurs="unbounded" ref="HierarchyElement"/>
      <xs:attribute name="name" use="required"/>
      <xs:attribute name="visible" default="true">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="true"/>
            <xs:enumeration value="false"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="hasAll">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="true"/>
            <xs:enumeration value="false"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="allMemberName"/>
      <xs:attribute name="allMemberCaption"/>
      <xs:attribute name="allLevelName"/>
      <xs:attribute name="defaultMember"/>
      <xs:attribute name="caption"/>
      <xs:attribute name="description"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Level">
    <xs:complexType>
      <xs:group minOccurs="0" maxOccurs="unbounded" ref="LevelElement"/>
      <xs:attribute name="name"/>
      <xs:attribute name="visible" default="true">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="true"/>
            <xs:enumeration value="false"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="attribute" use="required"/>
      <xs:attribute name="parentAttribute"/>
      <xs:attribute name="nullParentValue"/>
      <xs:attribute name="hideMemberIf" default="Never">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="Never"/>
            <xs:enumeration value="IfBlankName"/>
            <xs:enumeration value="IfParentsName"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="formatter"/>
      <xs:attribute name="caption"/>
      <xs:attribute name="description"/>
    </xs:complexType>
  </xs:element>
  <!--
    Specifies the transitive closure of a parent-child hierarchy.
    Optional, but recommended for better performance.
    The closure is provided as a set of (parent, child) pairs:
    since it is the transitive closure these are actually (ancestor,
    descendant) pairs.
    Each row of the table must be a tuple of the parent-child
    hierarchy.
  -->
  <xs:element name="Closure">
    <xs:complexType>
      <xs:attribute name="parentColumn" use="required"/>
      <xs:attribute name="childColumn" use="required"/>
      <xs:attribute name="distanceColumn" default="distance"/>
      <xs:attribute name="table" use="required"/>
    </xs:complexType>
  </xs:element>
  <!-- Member property. -->
  <xs:element name="Property">
    <xs:complexType>
      <xs:group minOccurs="0" maxOccurs="unbounded" ref="PropertyElement"/>
      <xs:attribute name="name"/>
      <xs:attribute name="attribute" use="required"/>
      <xs:attribute name="caption"/>
      <xs:attribute name="description"/>
      <xs:attribute name="formatter"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="MeasureOrRef">
    <xs:complexType/>
  </xs:element>
  <!--
    Specifies the column where the aggregation of a given measure is
    stored in the current aggregate table.
    Can only occur in a MeasureGroup whose type is 'aggregate'.
  -->
  <xs:element name="MeasureRef">
    <xs:complexType>
      <xs:attribute name="name" use="required"/>
      <xs:attribute name="aggColumn" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Measure">
    <xs:complexType>
      <xs:group minOccurs="0" maxOccurs="unbounded" ref="MeasureElement"/>
      <xs:attribute name="name" use="required"/>
      <xs:attribute name="column"/>
      <xs:attribute name="table"/>
      <xs:attribute name="formatString"/>
      <xs:attribute name="datatype">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="String"/>
            <xs:enumeration value="Numeric"/>
            <xs:enumeration value="Integer"/>
            <xs:enumeration value="Boolean"/>
            <xs:enumeration value="Date"/>
            <xs:enumeration value="Time"/>
            <xs:enumeration value="Timestamp"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="aggregator" use="required"/>
      <xs:attribute name="formatter"/>
      <xs:attribute name="caption"/>
      <xs:attribute name="description"/>
      <xs:attribute name="visible">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="true"/>
            <xs:enumeration value="false"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <!-- Collection of CalculatedMember elements. -->
  <xs:element name="CalculatedMembers">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="CalculatedMember"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="CalculatedMember">
    <xs:complexType>
      <xs:group minOccurs="0" maxOccurs="unbounded" ref="CalculatedMemberElement"/>
      <xs:attribute name="name" use="required"/>
      <xs:attribute name="formatString"/>
      <xs:attribute name="caption"/>
      <xs:attribute name="description"/>
      <xs:attribute name="formula"/>
      <xs:attribute name="dimension"/>
      <xs:attribute name="hierarchy"/>
      <xs:attribute name="parent"/>
      <xs:attribute name="visible">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="true"/>
            <xs:enumeration value="false"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <!--
    Property of a calculated member defined against a cube.
    It must have either an expression or a value.
  -->
  <xs:element name="CalculatedMemberProperty">
    <xs:complexType>
      <xs:attribute name="name" use="required"/>
      <xs:attribute name="caption"/>
      <xs:attribute name="description"/>
      <xs:attribute name="expression"/>
      <xs:attribute name="value"/>
    </xs:complexType>
  </xs:element>
  <!-- Collection of NamedSet elements. -->
  <xs:element name="NamedSets">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="NamedSet"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--
    <p>Defines a named set which can be used in queries in the
    same way as a set defined using a WITH SET clause.</p>
    <p>A named set can be defined against a particular cube,
    or can be global to a schema. If it is defined against a
    cube, it is only available to queries which use that cube.</p>
    <p>A named set defined against a schema is available in
    all cubes in that schema. However, it is
    only valid if the cube contains dimensions with the names
    required to make the formula valid.</p>
  -->
  <xs:element name="NamedSet">
    <xs:complexType>
      <xs:group minOccurs="0" maxOccurs="unbounded" ref="CalculatedMemberElement"/>
      <xs:attribute name="name" use="required"/>
      <xs:attribute name="caption"/>
      <xs:attribute name="description"/>
      <xs:attribute name="formula"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Formula" type="xs:string"/>
  <!-- Relation defined by a SQL statement. -->
  <xs:element name="Query" substitutionGroup="PhysicalSchemaElement">
    <xs:complexType>
      <xs:group minOccurs="0" maxOccurs="unbounded" ref="QueryElement"/>
      <xs:attribute name="alias" use="required"/>
      <xs:attribute name="keyColumn"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="SQL">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="any">
          <xs:attribute name="dialect" default="generic"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="Table" substitutionGroup="PhysicalSchemaElement">
    <xs:complexType>
      <xs:group minOccurs="0" maxOccurs="unbounded" ref="TableElement"/>
      <xs:attribute name="name" use="required"/>
      <xs:attribute name="schema"/>
      <xs:attribute name="alias"/>
      <xs:attribute name="keyColumn"/>
    </xs:complexType>
  </xs:element>
  <!-- Collection of hints. -->
  <xs:element name="Hints">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="Hint"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!-- Dialect-specific table optimization hints. -->
  <xs:element name="Hint">
    <xs:complexType mixed="true">
      <xs:attribute name="type" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="InlineTable" substitutionGroup="PhysicalSchemaElement">
    <xs:complexType>
      <xs:group minOccurs="0" maxOccurs="unbounded" ref="InlineTableElement"/>
      <xs:attribute name="alias" use="required"/>
    </xs:complexType>
  </xs:element>
  <!--
    Table for a time dimension that is automatically created and
    populated.
    If the ColumnDefs child is specified, then columns are created
    with the given names and types. Each column must have a 'role'
    attribute that determines how it is populated.
    If ColumnDefs is not specified, the following columns
    will be created:
    time_id (role JULIAN, the Julian day number, e.g. 12345),
    the_date (role DATE, e.g. '2012-12-31', a DATE value or the DBMS
    equivalent),
    the_day (role DAY_OF_WEEK_NAME, e.g. 'Wednesday'),
    the_month (role MONTH_NAME, e.g. 'December'),
    the_year (role YEAR, e.g. 2012),
    day_of_month (role DAY_OF_MONTH, e.g. '31'),
    week_of_year (role WEEK_OF_YEAR, e.g. 53),
    month_of_year (role MONTH, e.g. 12),
    quarter (role QUARTER, e.g. 4).
  -->
  <xs:element name="AutoGeneratedDateTable" substitutionGroup="PhysicalSchemaElement">
    <xs:complexType>
      <xs:group minOccurs="0" maxOccurs="unbounded" ref="TableElement"/>
      <xs:attribute name="startDate" use="required"/>
      <xs:attribute name="endDate" use="required"/>
      <xs:attribute name="name" use="required"/>
      <xs:attribute name="schema"/>
      <xs:attribute name="alias"/>
      <xs:attribute name="keyColumn"/>
    </xs:complexType>
  </xs:element>
  <!-- Holder for an array of RealOrCalcColumnDef elements. -->
  <xs:element name="ColumnDefs">
    <xs:complexType>
      <xs:choice maxOccurs="unbounded">
      <!-- CHANGE BY DS: old: <xs:element minOccurs="0" maxOccurs="unbounded" ref="RealOrCalcColumnDef"/> -->
      <!-- CalculatedColumnDef add -->
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="ColumnDef"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="CalculatedColumnDef"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="RealOrCalcColumnDef">
    <xs:complexType>
      <xs:attribute name="name" use="required"/>
      <xs:attribute name="type">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="String"/>
            <xs:enumeration value="Numeric"/>
            <xs:enumeration value="Integer"/>
            <xs:enumeration value="Boolean"/>
            <xs:enumeration value="Date"/>
            <xs:enumeration value="Time"/>
            <xs:enumeration value="Timestamp"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="internalType"/>
    </xs:complexType>
  </xs:element>
  <!-- Column definition for a table or inline table. -->
  <xs:element name="ColumnDef">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="TimeDomain"/>
      </xs:sequence>
      <xs:attribute name="name" use="required"/>
      <xs:attribute name="type">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="String"/>
            <xs:enumeration value="Numeric"/>
            <xs:enumeration value="Integer"/>
            <xs:enumeration value="Boolean"/>
            <xs:enumeration value="Date"/>
            <xs:enumeration value="Time"/>
            <xs:enumeration value="Timestamp"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="internalType"/>
    </xs:complexType>
  </xs:element>
  <!--
    Specification for how to generate the values of a column in an
    auto-generated time dimension table.
  -->
  <xs:element name="TimeDomain">
    <xs:complexType>
      <xs:attribute name="role"/>
      <xs:attribute name="epoch"/>
    </xs:complexType>
  </xs:element>
  <!-- Column definition that is computed using an expression. -->
  <xs:element name="CalculatedColumnDef">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="Expression">
          <xs:attribute name="name" use="required"/>
          <xs:attribute name="type">
            <xs:simpleType>
              <xs:restriction base="xs:token">
                <xs:enumeration value="String"/>
                <xs:enumeration value="Numeric"/>
                <xs:enumeration value="Integer"/>
                <xs:enumeration value="Boolean"/>
                <xs:enumeration value="Date"/>
                <xs:enumeration value="Time"/>
                <xs:enumeration value="Timestamp"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute name="internalType"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <!-- Holder for an array of Row elements. -->
  <xs:element name="Rows">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="Row"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--
    Row definition for an inline table.
    Must have one Column for each ColumnDef in the InlineTable.
  -->
  <xs:element name="Row">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="Value"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--
    Column value for an inline table.
    The CDATA holds the value of the column.
  -->
  <xs:element name="Value">
    <xs:complexType mixed="true">
      <xs:attribute name="column" use="required"/>
    </xs:complexType>
  </xs:element>
  <!--
    A definition of an aggregate table for a base fact table.
    This aggregate table must be in the same schema as the
    base fact table.
  -->
  <xs:element name="AggTable">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="AggFactCount"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="AggIgnoreColumn"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="AggForeignKey"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="AggMeasure"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="AggLevel"/>
      </xs:sequence>
      <xs:attribute name="ignorecase" default="true">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="true"/>
            <xs:enumeration value="false"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="AggName">
    <xs:complexType>
      <xs:attribute name="name" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="AggPattern">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="AggExclude"/>
      </xs:sequence>
      <xs:attribute name="pattern" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="AggExclude">
    <xs:complexType>
      <xs:attribute name="pattern"/>
      <xs:attribute name="name"/>
      <xs:attribute name="ignorecase" default="true">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="true"/>
            <xs:enumeration value="false"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="AggColumnName">
    <xs:complexType>
      <xs:attribute name="column" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="AggFactCount">
    <xs:complexType>
      <xs:attribute name="column" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="AggIgnoreColumn">
    <xs:complexType/>
  </xs:element>
  <!--
    The name of the column mapping from base fact table foreign key
    to aggregate table foreign key.
  -->
  <xs:element name="AggForeignKey">
    <xs:complexType>
      <xs:attribute name="factColumn" use="required"/>
      <xs:attribute name="aggColumn" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="AggLevel">
    <xs:complexType>
      <xs:attribute name="column" use="required"/>
      <xs:attribute name="name" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="AggMeasure">
    <xs:complexType>
      <xs:attribute name="column" use="required"/>
      <xs:attribute name="name" use="required"/>
    </xs:complexType>
  </xs:element>
  <!-- Collection of columns. -->
  <xs:element name="Columns">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="Column"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--
    Definition of the key of a dimension or table.
    Even though its base class is Columns, and Columns implements
    the Holder interface, we do not use Key as a holder. This is
    because a Table can have more than one Key.
  -->
  <xs:element name="Key">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="Column"/>
      </xs:sequence>
      <xs:attribute name="name"/>
    </xs:complexType>
  </xs:element>
  <!--
    Column that holds the name of an attribute.
    See also Attribute.nameColumn.
  -->
  <xs:element name="Name">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="Column"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--
    Column(s) that define the order of members of an attribute.
    See also Attribute.orderByColumn.
  -->
  <xs:element name="OrderBy">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="Column"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--
    Column that holds the caption of an attribute.
    See also Attribute.captionColumn.
  -->
  <xs:element name="Caption">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="Column"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--
    Column(s) that hold the foreign key from a measure group's
    fact table to a dimension's table.
    See also ForeignKeyLink.foreignKeyColumn.
  -->
  <xs:element name="ForeignKey">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="Column"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--
    Arguments to a measure. For most measures, the argument is a single
    Column. See also the column attribute of the Measure
    element.
  -->
  <xs:element name="Arguments">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="Column"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--
    Reference to a column in an expression, key, or CopyLink.
    Table name is optional if the column is being used within a
    table definition. If the column reference is used within a key,
    the table name, if present, must be the same as the containing
    table.
  -->
  <xs:element name="Column" substitutionGroup="Expression">
    <xs:complexType>
      <xs:attribute name="table"/>
      <xs:attribute name="name" use="required"/>
      <xs:attribute name="aggColumn"/>
    </xs:complexType>
  </xs:element>
  <!-- A collection of SQL expressions, one per dialect. -->
  <xs:element name="ExpressionView" substitutionGroup="Expression">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="SQL"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--
    A role defines an access-control profile. It has a series of grants
    (or denials) for schema elements.
  -->
  <xs:element name="Role">
    <xs:complexType>
      <xs:group minOccurs="0" maxOccurs="unbounded" ref="RoleElement"/>
      <xs:attribute name="name" use="required"/>
      <xs:attribute name="className"/>
    </xs:complexType>
  </xs:element>
  <!--
    Grants (or denies) this role access to this schema.
    access may be "all", "all_dimensions", "custom"
    or "none".
    If access is "all_dimensions", the role has access
    to all dimensions but still needs explicit access to cubes.
    If access is "custom", no access will be inherited by
    cubes for which no explicit rule is set.
    If access is "all_dimensions", an implicut access is
    given to all dimensions of the schema's cubes, provided the cube's
    access attribute is either "custom" or "all".
    See mondrian.olap.Role#grant(mondrian.olap.Schema,int).
  -->
  <xs:element name="SchemaGrant">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="CubeGrant"/>
      </xs:sequence>
      <xs:attribute name="access" use="required">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="all"/>
            <xs:enumeration value="custom"/>
            <xs:enumeration value="none"/>
            <xs:enumeration value="all_dimensions"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <!--
    Grants (or denies) this role access to a cube.
    access may be "all", "custom" or "none".
    If access is "custom", no access will be inherited
    by the dimensions of this cube, unless the parent SchemaGrant is
    set to "ALL_DIMENSIONS".
    See mondrian.olap.Role#grant(mondrian.olap.Cube,int).
  -->
  <xs:element name="CubeGrant">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="DimensionGrant"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="HierarchyGrant"/>
      </xs:sequence>
      <xs:attribute name="cube" use="required"/>
      <xs:attribute name="access" use="required">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="all"/>
            <xs:enumeration value="custom"/>
            <xs:enumeration value="none"/>
            <xs:enumeration value="all_dimensions"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <!--
    Grants (or denies) this role access to a dimension.
    access may be "all", "custom" or "none".
    Note that a role is implicitly given access to a dimension when it
    is given "ALL" acess to a cube.
    If access is "custom", no access will be inherited
    by the hierarchies of this dimension.
    If the parent schema access is "ALL_DIMENSIONS",
    this timension will inherit access "ALL".
    See also the "all_dimensions" option of the "SchemaGrant" element.
    See mondrian.olap.Role#grant(mondrian.olap.Dimension,int).
  -->
  <xs:element name="DimensionGrant">
    <xs:complexType>
      <xs:attribute name="dimension" use="required"/>
      <xs:attribute name="access" use="required">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="all"/>
            <xs:enumeration value="custom"/>
            <xs:enumeration value="none"/>
            <xs:enumeration value="all_dimensions"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <!--
    Grants (or denies) this role access to a hierarchy.
    access may be "all", "custom" or "none".
    If access is "custom", you may also specify the
    attributes topLevel, bottomLevel, and
    the member grants.
    If access is "custom", the child levels of this
    hierarchy will not inherit access rights from this hierarchy,
    should there be no explicit rules defined for said child level.
    See mondrian.olap.Role#grant(mondrian.olap.Hierarchy, int, mondrian.olap.Level).
  -->
  <xs:element name="HierarchyGrant">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="MemberGrant"/>
      </xs:sequence>
      <xs:attribute name="hierarchy" use="required"/>
      <xs:attribute name="topLevel"/>
      <xs:attribute name="bottomLevel"/>
      <xs:attribute name="rollupPolicy"/>
      <xs:attribute name="access" use="required">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="all"/>
            <xs:enumeration value="custom"/>
            <xs:enumeration value="none"/>
            <xs:enumeration value="all_dimensions"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <!--
    Grants (or denies) this role access to a member.
    The children of this member inherit that access.
    You can implicitly see a member if you can see any of its children.
    See mondrian.olap.Role#grant(mondrian.olap.Member,int).
  -->
  <xs:element name="MemberGrant">
    <xs:complexType>
      <xs:attribute name="member" use="required"/>
      <xs:attribute name="access" use="required">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="all"/>
            <xs:enumeration value="none"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <!--
    Body of a Role definition which defines a Role to be the union
    of several Roles. The RoleUsage elements must refer to Roles that
    have been declared earlier in this schema file.
  -->
  <xs:element name="Union">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="RoleUsage"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!-- Usage of a Role in a union Role. -->
  <xs:element name="RoleUsage">
    <xs:complexType>
      <xs:attribute name="roleName" use="required"/>
    </xs:complexType>
  </xs:element>
  <!--
    A UserDefinedFunction is a function which
    extends the MDX language. It must be implemented by a Java
    class which implements the interface
    mondrian.spi.UserDefinedFunction.
  -->
  <xs:element name="UserDefinedFunction">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="Script"/>
      </xs:sequence>
      <xs:attribute name="name" use="required"/>
      <xs:attribute name="className"/>
    </xs:complexType>
  </xs:element>
  <!--
    A Parameter defines a schema parameter.
    It can be referenced from an MDX statement using the ParamRef
    function and, if not final, its value can be overridden.
  -->
  <xs:element name="Parameter">
    <xs:complexType>
      <xs:attribute name="name" use="required"/>
      <xs:attribute name="description"/>
      <xs:attribute name="type" default="String">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="String"/>
            <xs:enumeration value="Numeric"/>
            <xs:enumeration value="Integer"/>
            <xs:enumeration value="Boolean"/>
            <xs:enumeration value="Date"/>
            <xs:enumeration value="Time"/>
            <xs:enumeration value="Timestamp"/>
            <xs:enumeration value="Member"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="modifiable" default="true">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="true"/>
            <xs:enumeration value="false"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="defaultValue"/>
    </xs:complexType>
  </xs:element>
  <!-- Holder for an array of Annotation elements -->
  <xs:element name="Annotations">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="Annotation"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!-- User-defined property value. -->
  <xs:element name="Annotation">
    <xs:complexType mixed="true">
      <xs:attribute name="name" use="required"/>
    </xs:complexType>
  </xs:element>
  <!--
    Script fragment to implement an SPI such as user-defined function,
    member formatter, cell formatter.
  -->
  <xs:element name="Script">
    <xs:complexType mixed="true">
      <xs:attribute name="language" default="JavaScript"/>
    </xs:complexType>
  </xs:element>
  <!--
    Plugin that formats the values of cells.
    It must be implemented by a Java
    class which implements the interface
    mondrian.spi.CellFormatter,
    or by a script.
  -->
  <xs:element name="CellFormatter">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="Script"/>
      </xs:sequence>
      <xs:attribute name="className"/>
    </xs:complexType>
  </xs:element>
  <!--
    Plugin that formats members.
    It must be implemented by a Java
    class which implements the interface
    mondrian.spi.MemberFormatter,
    or by a script.
  -->
  <xs:element name="MemberFormatter">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="Script"/>
      </xs:sequence>
      <xs:attribute name="className"/>
    </xs:complexType>
  </xs:element>
  <!--
    Plugin that formats properties.
    It must be implemented by a Java
    class which implements the interface
    mondrian.spi.PropertyFormatter,
    or by a script.
  -->
  <xs:element name="PropertyFormatter">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="Script"/>
      </xs:sequence>
      <xs:attribute name="className"/>
    </xs:complexType>
  </xs:element>
  <!-- Defines localization of this schema. -->
  <xs:element name="Localization">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="LocalizationElement"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!-- Holder for one or more Locale elements. -->
  <xs:element name="Locales" substitutionGroup="LocalizationElement">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="Locale"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!-- Describes a locale supported by this schema. -->
  <xs:element name="Locale">
    <xs:complexType>
      <xs:attribute name="locale" use="required"/>
    </xs:complexType>
  </xs:element>
  <!-- Holder for one or more Translation elements. -->
  <xs:element name="Translations" substitutionGroup="LocalizationElement">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="Translation"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--
    Describes a Translation supported by this schema.
    The resource file is substituted with the locale.
    For example, given
    <Translation path='sales_resource_${locale}.properties'/>,
    if the current locale is 'fr-FR', Mondrian will look for a file
    named 'sales_resource_fr_FR.properties'.
  -->
  <xs:element name="Translation">
    <xs:complexType>
      <xs:attribute name="path" use="required"/>
    </xs:complexType>
  </xs:element>
  <!--
    Definition of the set of tables, columns, and relationships
    that the cubes and dimensions in this schema are mapped onto.
  -->
  <xs:element name="PhysicalSchema">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="PhysicalSchemaElement"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!-- Definition of a link between two tables. -->
  <xs:element name="Link" substitutionGroup="PhysicalSchemaElement">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="ForeignKey"/>
      </xs:sequence>
      <xs:attribute name="source" use="required"/>
      <xs:attribute name="target" use="required"/>
      <xs:attribute name="key"/>
      <xs:attribute name="foreignKeyColumn"/>
    </xs:complexType>
  </xs:element>
  <!-- Holder for one or more MeasureGroup elements. -->
  <xs:element name="MeasureGroups">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="MeasureGroup"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!-- Collection of measures that reside in the same fact table. -->
  <xs:element name="MeasureGroup">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="MeasureGroupElement"/>
      </xs:sequence>
      <xs:attribute name="name"/>
      <xs:attribute name="type" default="fact">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="fact"/>
            <xs:enumeration value="aggregate"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="table" use="required"/>
      <xs:attribute name="ignoreUnrelatedDimensions" default="false">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="true"/>
            <xs:enumeration value="false"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="approxRowCount"/>
    </xs:complexType>
  </xs:element>
  <!-- Holder element for {@link MondrianDef.Measure} elements. -->
  <xs:element name="Measures" substitutionGroup="MeasureGroupElement">
    <xs:complexType>
      <xs:choice maxOccurs="unbounded">
      <!-- CHANGED BY DS: old: <xs:element minOccurs="0" maxOccurs="unbounded" ref="MeasureOrRef"/> -->
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="Measure"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="MeasureRef"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <!-- Holder element for {@link MondrianDef.DimensionLink} elements. -->
  <xs:element name="DimensionLinks" substitutionGroup="MeasureGroupElement">
    <xs:complexType>
       <xs:choice maxOccurs="unbounded">
      	<!-- CHANGED BY DS: old: <xs:element minOccurs="0" maxOccurs="unbounded" ref="DimensionLink"/> -->
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="ForeignKeyLink"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="FactLink"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="NoLink"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="ReferenceLink"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="CopyLink"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <!--
    Usage of a {@link MondrianDef.Dimension} by a
    {@link MondrianDef.MeasureGroup}. Describes how the fact table
    of the measure group is linked to the dimension table.
    There are subclasses, describing particular ways of linking:
    ForeignKeyLink, FactLink, ReferenceLink, NoLink.
  -->
  <xs:element name="DimensionLink">
    <xs:complexType>
      <xs:attribute name="dimension" use="required"/>
    </xs:complexType>
  </xs:element>
  <!--
    Dimension that is linked to a measure group by a foreign key
    from the fact table to the dimension table. This is the most
    common form of dimension link.
    You may specify the foreign key using either the foreignKeyColumn
    attribute, or a nested ForeignKey element, but not both. The foreign
    key must contain the same number and type of columns as the key of
    the linked dimension's key attribute.
  -->
  <xs:element name="ForeignKeyLink">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="ForeignKey"/>
      </xs:sequence>
      <xs:attribute name="foreignKeyColumn"/>
      <xs:attribute name="attribute"/>
      <xs:attribute name="dimension" use="required"/>
    </xs:complexType>
  </xs:element>
  <!--
    Dimension that is trivially linked to a measure group because
    the dimension table is the fact table. This is also known as
    a 'degenerate dimension'.
  -->
  <xs:element name="FactLink">
    <xs:complexType>
      <xs:attribute name="dimension" use="required"/>
    </xs:complexType>
  </xs:element>
  <!--
    Dimension that is linked into a measure group via another dimension.
    Its key does not join to the fact table, as in a ForeignKeyLink, but
    instead joins to the key of a given attribute of a given dimension.
  -->
  <xs:element name="ReferenceLink">
    <xs:complexType>
      <xs:attribute name="viaAttribute"/>
      <xs:attribute name="viaDimension"/>
      <xs:attribute name="dimension" use="required"/>
    </xs:complexType>
  </xs:element>
  <!--
    Documents that a dimension is not linked to the current measure
    group.
    If Schema.missingLink=ignore then this element is not
    necessary. However, we recommend that you use
    Schema.missingLink=warning (the default) and create explicit links
    for all dimensions.
  -->
  <xs:element name="NoLink">
    <xs:complexType>
      <xs:attribute name="dimension" use="required"/>
    </xs:complexType>
  </xs:element>
  <!--
    Indicates dimension that is represented by key columns in the fact
    table; or rather, the aggregate table, since this kind of link may
    only be used in a MeasureGroup whose type is 'aggregate'.
  -->
  <xs:element name="CopyLink">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="Column"/>
      </xs:sequence>
      <xs:attribute name="dimension" use="required"/>
     <xs:attribute name="attribute"/>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="any" mixed="true">
    <xs:sequence>
      <xs:any minOccurs="0" maxOccurs="unbounded" processContents="strict"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>